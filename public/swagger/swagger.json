
{
    "swagger": "2.0",
    "info": {
        "description": "The Backend of BMS inspired movie ticketing based project",
        "version": "1.0.0",
        "title": "Movie Ticket Backend",
        "contact": {
            "email": ""
        },
        "license": {
            "name": "",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "schemes": ["http"],
    "host": "",
    "basePath": "/",
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header",
            "description": "Authentication token"
        }
    },
    "paths" : {
        "/auth/sign-up" : {
            "post" : {
                "summary" : "Create new user",
                "description": "Create new user",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/signup"
                        }
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/auth/login" : {
            "post" : {
                "summary" : "Access User Token",
                "description": "Access the user based token for Protected routes",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/login"
                        }
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/location/pincodes" : {
            "get" : {
                "summary" : "Fetch locations",
                "description": "Fetch all the locations",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/location" : {
            "post" : {
                "summary" : "Create locations",
                "description": "Create new locations for further cinema entity",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "locationPincode",
                        "in": "body",
                        "description": "Pincode of any locations",
                        "required": true,
                        "type": "object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "locationPincode": {
                                     "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/manage-cinema" : {
            "post" : {
                "summary" : "Create Cinema",
                "description": "Create new cinema mapping with location pincode",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "locationPincode",
                        "in": "body",
                        "description": "Pincode of any locations",
                        "required": true,
                        "type": "object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "cinemaName": {
                                     "type": "string"
                                },
                                "locationPincode": {
                                    "type": "string"
                               }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/manage-cinema/cinemas" : {
            "get" : {
                "summary" : "Fetch all Cinemas",
                "description": "Fetch all the Cinemas irrespective of the locations",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/manage-shows" : {
            "post" : {
                "summary" : "Create Shows",
                "description": "Create shows in the Cinema",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/shows"
                        }
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/manage-shows/location-shows" : {
            "post" : {
                "summary" : "Fetch Shows Based on Locations",
                "description": "Ability to view all the movies playing in your city",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "locationPincode": {
                                    "type": "string"
                               }
                            }
                        }
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/manage-shows/cinema-shows" : {
            "post" : {
                "summary" : "Fetch movie shows based on all the Cinemas",
                "description": "Ability to check all cinemas in which a movie is playing along with all the showtimes.",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "currentDate": {
                                    "type": "string",
                                    "example": "2022-07-01"
                               },
                               "currentTime": {
                                    "type": "string",
                                    "example": "02:30:10"
                                }
                            }
                        }
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/manage-shows/book-seats" : {
            "post" : {
                "security": [{
                    "Bearer": []
                }],
                "summary" : "Request seats in the movie show",
                "description": "Request seats in the movie show",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "seats": {
                                    "type": "integer"
                               },
                               "movieShowId": {
                                    "type": "integer"
                                }
                            }
                        }
                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "todosResponse": {
            "type": "object",
            "properties": {
                "message": {
                     "type": "string"
                },
                "data": {
                    "type": "object"
                }
            }
        },
        "signup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "shows": {
            "type": "object",
            "properties": {
                "movie_show": {
                    "type": "string"
                },
                "seats": {
                    "type": "integer"
                },
                "per_seat_price": {
                    "type": "integer"
                },
                "movieDate": {
                    "type": "string",
                    "example": "2022-07-01"
                },
                "movieTime": {
                    "type": "string",
                    "example": "15:30"
                },
                "cinemaId": {
                    "type": "integer"
                },
                "movie_duration_time": {
                    "type": "string",
                    "example": "02:30:10"
                }
    
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "error": {
                    "type": "object"
                }
            }

        }
    }
}
